{"version":3,"sources":["components/Statistic.jsx","components/Buttons.jsx","App.js","index.js","state.js"],"names":["Statistic","this","props","totalCounter","positiveFeedbackCounter","good","bad","neutral","React","Component","Buttons","console","log","options","handleIncrement","handleDecrement","handleNeutral","type","onClick","App","state","setState","prevState","Math","ceil","bind","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4RAsBeA,E,4JAnBX,WAAU,IAAD,EAC+DC,KAAKC,MAAlEC,EADF,EACEA,aAAcC,EADhB,EACgBA,wBAAyBC,EADzC,EACyCA,KAAMC,EAD/C,EAC+CA,IAAKC,EADpD,EACoDA,QACzD,OAAO,gCACH,4CACCJ,IAAiB,EACZ,gCACE,4BAAI,SAAWE,IACf,4BAAI,YAAcE,IAClB,4BAAI,QAAUD,IACd,4BAAI,UAAYH,MAChB,4BAAI,sBAAwBC,IAA4B,SAE1D,8BACE,0D,GAdII,IAAMC,W,OCefC,E,4JAbX,WACIC,QAAQC,IAAIX,KAAKC,OADZ,kBAEqDD,KAAKC,MAAMW,QAFhE,GAEEC,EAFF,KAEmBC,EAFnB,KAEoCC,EAFpC,KAGL,OACK,gCACG,wBAAQC,KAAK,SAASC,QAASJ,EAA/B,kBACA,wBAAQG,KAAK,SAASC,QAASF,EAA/B,qBACA,wBAAQC,KAAK,SAASC,QAASH,EAA/B,wB,GARMP,IAAMC,WCyDbU,E,4MAnDbC,M,eACK,EAAKlB,MAAMkB,O,EAEhBN,gBAAkB,WAChB,EAAKO,UAAS,SAAAC,GAAS,MAAK,CAACjB,KAAMiB,EAAUjB,KAAO,O,EAGtDU,gBAAkB,WAChB,EAAKM,UAAS,SAAAC,GAAS,MAAK,CAAChB,IAAKgB,EAAUhB,IAAM,O,EAGpDU,cAAgB,WACd,EAAKK,UAAS,SAAAC,GAAS,MAAK,CAACf,QAASe,EAAUf,QAAU,O,kDAG5D,WAAgB,IAAD,EACgBN,KAAKmB,MAClC,OAFa,EACNf,KADM,EACAE,QADA,EACSD,M,qCAIxB,WAA2B,IACjBD,EAASJ,KAAKmB,MAAdf,KACR,OAAQJ,KAAKE,gBACX,KAAK,EACH,OAAO,EACT,QACE,OAAOoB,KAAKC,KAAMnB,EAAOJ,KAAKE,eAAkB,Q,oBAItD,WACE,OACE,gCACE,uDACA,cAAC,EAAD,CACEU,QAAS,CAACZ,KAAKa,gBACbb,KAAKc,gBACLd,KAAKe,iBAET,cAAC,EAAD,CACEb,aAAcF,KAAKE,aAAasB,KAAKxB,MACrCG,wBAAyBH,KAAKG,wBAAwBqB,KAAKxB,MAC3DI,KAAMJ,KAAKmB,MAAMf,KACjBC,IAAKL,KAAKmB,MAAMd,IAChBC,QAASN,KAAKmB,MAAMb,iB,GA9CZE,aCDlBiB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,CAAKR,MCRY,CACnBf,KAAM,EACNE,QAAS,EACTD,IAAK,ODOLuB,SAASC,eAAe,W","file":"static/js/main.f3d95040.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass Statistic extends React.Component{\r\n    render() {\r\n        const {totalCounter, positiveFeedbackCounter, good, bad, neutral} = this.props\r\n        return <div>\r\n            <h2>Statistics</h2>\r\n            {totalCounter() > 0\r\n                ? <div>\r\n                    <p>{'Good: ' + good}</p>\r\n                    <p>{'Neutral: ' + neutral}</p>\r\n                    <p>{'Bad: ' + bad}</p>\r\n                    <p>{'Total: ' + totalCounter()}</p>\r\n                    <p>{'Positive Feedback: ' + positiveFeedbackCounter() + '%'}</p>\r\n                </div>\r\n                : <div>\r\n                    <p>No Feedbacks yet</p>\r\n                </div>}\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default Statistic;","import React from 'react'\r\n\r\n\r\nclass Buttons extends React.Component{\r\n    render() {\r\n        console.log(this.props);\r\n        const [handleIncrement, handleDecrement, handleNeutral] = this.props.options\r\n        return (\r\n             <div>\r\n                <button type='button' onClick={handleIncrement}>Good</button>\r\n                <button type='button' onClick={handleNeutral}>Neutral</button>\r\n                <button type='button' onClick={handleDecrement}>Bad</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Buttons;","// import logo from './logo.svg';\nimport React from 'react'\nimport './App.css';\nimport { Component } from 'react';\nimport Statistic from './components/Statistic'\nimport Buttons from './components/Buttons'\n\nclass App extends Component {\n\n  state = {\n    ...this.props.state\n  }\n  handleIncrement = () => {\n    this.setState(prevState => ({good: prevState.good + 1}))\n  }\n\n  handleDecrement = () => {\n    this.setState(prevState => ({bad: prevState.bad + 1}))\n  }\n\n  handleNeutral = () => {\n    this.setState(prevState => ({neutral: prevState.neutral + 1}))\n  }\n\n  totalCounter() {\n    const {good, neutral, bad} = this.state\n    return good + neutral + bad;\n  }\n\n  positiveFeedbackCounter() {\n    const { good } = this.state\n    switch (this.totalCounter()) {\n      case 0:\n        return 0;\n      default:\n        return Math.ceil((good / this.totalCounter()) * 100)\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <h2>Please Leave Feedback</h2>\n        <Buttons\n          options={[this.handleIncrement,\n            this.handleDecrement,\n            this.handleNeutral]}\n        />\n        <Statistic\n          totalCounter={this.totalCounter.bind(this)}\n          positiveFeedbackCounter={this.positiveFeedbackCounter.bind(this)}\n          good={this.state.good}\n          bad={this.state.bad}\n          neutral={this.state.neutral}\n        />\n      </div>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {state} from './state'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App state={state}/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n","export const state = {\r\n  good: 0,\r\n  neutral: 0,\r\n  bad: 0\r\n}\r\n"],"sourceRoot":""}